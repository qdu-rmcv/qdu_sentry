# amcl:
#   ros__parameters:
#     use_sim_time: False
#     alpha1: 0.05
#     alpha2: 0.05
#     alpha3: 0.05
#     alpha4: 0.05
#     alpha5: 0.2
#     base_frame_id: "base_link"
#     beam_skip_distance: 0.5
#     beam_skip_error_threshold: 0.9
#     beam_skip_threshold: 0.3
#     do_beamskip: false
#     global_frame_id: "map"
#     lambda_short: 0.1
#     laser_likelihood_max_dist: 4.0
#     laser_max_range: 100.0
#     laser_min_range: -1.0
#     laser_model_type: "likelihood_field"
#     max_beams: 60
#     max_particles: 2000
#     min_particles: 500
#     odom_frame_id: "odom"
#     pf_err: 0.05
#     pf_z: 0.99
#     recovery_alpha_fast: 0.0
#     recovery_alpha_slow: 0.0
#     resample_interval: 1
#     robot_model_type: "nav2_amcl::OmniMotionModel"
#     save_pose_rate: 0.5
#     sigma_hit: 0.2
#     tf_broadcast: true
#     transform_tolerance: 1.0
#     update_min_a: 0.2
#     update_min_d: 0.25
#     z_hit: 0.8
#     z_max: 0.05
#     z_rand: 0.5
#     z_short: 0.05
#     scan_topic: scan

# small_gicp_relocalization:
#   ros__parameters:
#     use_sim_time: false
#     num_threads: 4
#     num_neighbors: 20
#     global_leaf_size: 0.15
#     registered_leaf_size: 0.05
#     max_dist_sq: 3.0
#     map_frame: "map"
#     odom_frame: "odom"
#     base_frame: "base_link"
#     robot_base_frame: "chassis"
#     lidar_frame: "livox_frame"
#     # The prior_pcd_file does not need to be specified since it going to be set by defaults in launch.
#     prior_pcd_file: "src/rm_navigation/rm_perception/fast_lio/PCD/map_1.pcd"

bt_navigator:
  ros__parameters:
    use_sim_time: False
    global_frame: map
    robot_base_frame: chassis
    odom_topic: /odometry
    bt_loop_duration: 10
    default_server_timeout: 20
    # 'default_nav_through_poses_bt_xml' and 'default_nav_to_pose_bt_xml' are use defaults:
    # nav2_bt_navigator/navigate_to_pose_w_replanning_and_recovery.xml
    # nav2_bt_navigator/navigate_through_poses_w_replanning_and_recovery.xml
    # They can be set here or via a RewrittenYaml remap from a parent launch file to Nav2.
    plugin_lib_names:
      - nav2_compute_path_to_pose_action_bt_node
      - nav2_compute_path_through_poses_action_bt_node
      - nav2_smooth_path_action_bt_node
      - nav2_follow_path_action_bt_node
      - nav2_spin_action_bt_node
      - nav2_wait_action_bt_node
      - nav2_assisted_teleop_action_bt_node
      - nav2_back_up_action_bt_node
      - nav2_drive_on_heading_bt_node
      - nav2_clear_costmap_service_bt_node
      - nav2_is_stuck_condition_bt_node
      - nav2_goal_reached_condition_bt_node
      - nav2_goal_updated_condition_bt_node
      - nav2_globally_updated_goal_condition_bt_node
      - nav2_is_path_valid_condition_bt_node
      - nav2_initial_pose_received_condition_bt_node
      - nav2_reinitialize_global_localization_service_bt_node
      - nav2_rate_controller_bt_node
      - nav2_distance_controller_bt_node
      - nav2_speed_controller_bt_node
      - nav2_truncate_path_action_bt_node
      - nav2_truncate_path_local_action_bt_node
      - nav2_goal_updater_node_bt_node
      - nav2_recovery_node_bt_node
      - nav2_pipeline_sequence_bt_node
      - nav2_round_robin_node_bt_node
      - nav2_transform_available_condition_bt_node
      - nav2_time_expired_condition_bt_node
      - nav2_path_expiring_timer_condition
      - nav2_distance_traveled_condition_bt_node
      - nav2_single_trigger_bt_node
      - nav2_goal_updated_controller_bt_node
      - nav2_is_battery_low_condition_bt_node
      - nav2_navigate_through_poses_action_bt_node
      - nav2_navigate_to_pose_action_bt_node
      - nav2_remove_passed_goals_action_bt_node
      - nav2_planner_selector_bt_node
      - nav2_controller_selector_bt_node
      - nav2_goal_checker_selector_bt_node
      - nav2_controller_cancel_bt_node
      - nav2_path_longer_on_approach_bt_node
      - nav2_wait_cancel_bt_node
      - nav2_spin_cancel_bt_node
      - nav2_back_up_cancel_bt_node
      - nav2_assisted_teleop_cancel_bt_node
      - nav2_drive_on_heading_cancel_bt_node
      - nav2_is_battery_charging_condition_bt_node

bt_navigator_navigate_through_poses_rclcpp_node:
  ros__parameters:
    use_sim_time: False

bt_navigator_navigate_to_pose_rclcpp_node:
  ros__parameters:
    use_sim_time: False

controller_server:
  ros__parameters:
    use_sim_time: False
    odom_topic: odometry
    controller_frequency: 50.0  # 控制频率为50Hz，更新非常快
    min_x_velocity_threshold: 0.001  # 最小速度阈值，低于此值被视为静止
    min_y_velocity_threshold: 0.001
    min_theta_velocity_threshold: 0.001
    failure_tolerance: 3.0  # 容忍失败的最大时间(秒)
    progress_checker_plugin: "progress_checker"
    goal_checker_plugins: ["general_goal_checker"] # "precise_goal_checker"
    controller_plugins: ["FollowPath"]

    # Progress checker parameters
    progress_checker:
      plugin: "nav2_controller::SimpleProgressChecker"
      required_movement_radius: 0.3
      movement_time_allowance: 10.0
    # Goal checker parameters
    # precise_goal_checker:
    #  plugin: "nav2_controller::SimpleGoalChecker"
    #  xy_goal_tolerance: 0.25
    #  yaw_goal_tolerance: 0.25
    #  stateful: True
    general_goal_checker:
      stateful: True
      plugin: "nav2_controller::SimpleGoalChecker"
      xy_goal_tolerance: 0.15
      yaw_goal_tolerance: 6.28
    FollowPath:
      plugin: teb_local_planner::TebLocalPlannerROS
      teb_autosize: 1.0
      dt_ref: 0.4
      dt_hysteresis: 0.04
      max_samples: 500
      global_plan_overwrite_orientation: True
      allow_init_with_backwards_motion: True
      max_global_plan_lookahead_dist: 7.0
      global_plan_viapoint_sep: 0.7
      global_plan_prune_distance: 1.0
      exact_arc_length: False
      feasibility_check_no_poses: 0
      publish_feedback: False
      # Robot
      max_vel_x: 0.3
      max_vel_x_backwards: 0.3
      max_vel_y: 0.3
      max_vel_theta: 0.3
      acc_lim_x: 1.25
      acc_lim_y: 0.6
      acc_lim_theta: 1.0
      min_turning_radius: 0.0 # omni-drive robot (can turn on place!)
      footprint_model:
        type: "point"
      # GoalTolerance

      xy_goal_tolerance: 0.15
      yaw_goal_tolerance: 6.28
      free_goal_vel: False
      complete_global_plan: True

      # Obstacles

      min_obstacle_dist: 0.4 # This value must also include our robot radius, since footprint_model is set to "point".
      inflation_dist: 0.26
      include_costmap_obstacles: True
      costmap_obstacles_behind_robot_dist: 1.0
      obstacle_poses_affected: 15
      costmap_converter_plugin: ""
      costmap_converter_spin_thread: True
      costmap_converter_rate: 5
      # Optimization

      no_inner_iterations: 5
      no_outer_iterations: 4
      optimization_activate: True
      optimization_verbose: False
      penalty_epsilon: 0.15
      obstacle_cost_exponent: 4.0
      weight_max_vel_x: 1.0
      weight_max_vel_y: 1.0
      weight_max_vel_theta: 1.0
      weight_acc_lim_x: 1.0
      weight_acc_lim_y: 1.0
      weight_acc_lim_theta: 1.0
      weight_kinematics_nh: 1.0 # WE HAVE A HOLONOMIC ROBOT, JUST ADD A SMALL PENALTY
      weight_kinematics_forward_drive: 1.0
      weight_kinematics_turning_radius: 1.0
      weight_optimaltime: 1.0 # must be > 0
      weight_shortest_path: 0.0
      weight_obstacle: 100.0
      weight_inflation: 0.2
      weight_dynamic_obstacle: 10.0
      weight_dynamic_obstacle_inflation: 0.2
      weight_viapoint: 1.0
      weight_adapt_factor: 2.0
      # Homotopy Class Planner
      enable_homotopy_class_planning: True
      enable_multithreading: True
      max_number_classes: 4
      selection_cost_hysteresis: 1.0
      selection_prefer_initial_plan: 0.9
      selection_obst_cost_scale: 1.0
      selection_alternative_time_cost: False
      
      roadmap_graph_no_samples: 15
      roadmap_graph_area_width: 5.0
      roadmap_graph_area_length_scale: 1.0
      h_signature_prescaler: 0.5
      h_signature_threshold: 0.1
      obstacle_heading_threshold: 0.45
      switching_blocking_period: 0.0
      viapoints_all_candidates: True
      delete_detours_backwards: True
      max_ratio_detours_duration_best_duration: 3.0
      visualize_hc_graph: False
      visualize_with_time_as_z_axis_scale: 0.0
      # Recovery
      
      shrink_horizon_backup: True
      shrink_horizon_min_duration: 10.0
      oscillation_recovery: True
      oscillation_v_eps: 0.1
      oscillation_omega_eps: 0.1
      oscillation_recovery_min_duration: 10.0
      oscillation_filter_duration: 10.0
    


local_costmap:
  local_costmap:
    ros__parameters:
      update_frequency: 10.0
      publish_frequency: 5.0
      global_frame: odom
      robot_base_frame: base_link
      use_sim_time: False
      rolling_window: true
      width: 5
      height: 5
      resolution: 0.05
      robot_radius: 0.2
      plugins: ["obstacle_layer", "inflation_layer"]
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.26
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: livox
        max_obstacle_height: 1.0
        min_obstacle_height: -1.0
        # rplidar:
        #   topic: /rplidar/scan
        #   max_obstacle_height: 1.0
        #   min_obstacle_height: -1.0
        #   clearing: True
        #   marking: True
        #   data_type: "LaserScan"
        #   raytrace_max_range: 3.0
        #   raytrace_min_range: 0.0
        #   obstacle_max_range: 2.5
        #   obstacle_min_range: 0.0
        livox:
          topic: /scan
          max_obstacle_height: 1.0
          min_obstacle_height: -1.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 10.0
          raytrace_min_range: 0.1
          obstacle_max_range: 10.0
          obstacle_min_range: 0.2
      # voxel_layer:
      #   plugin: "nav2_costmap_2d::VoxelLayer"
      #   enabled: True
      #   publish_voxel_map: True
      #   origin_z: -0.55
      #   z_resolution: 0.05
      #   z_voxels: 16
      #   min_obstacle_height: 1.0
      #   max_obstacle_height: 1.0
      #   mark_threshold: 0
      #   observation_sources: pointcloud
      #   pointcloud:
      #     topic: /segmentation/obstacle
      #     min_obstacle_height: -1.0
      #     max_obstacle_height: 1.0
      #     clearing: True
      #     marking: True
      #     data_type: "PointCloud2"
      #     raytrace_max_range: 5.0
      #     raytrace_min_range: 0.0
      #     obstacle_max_range: 3.0
      #     obstacle_min_range: 0.0
      static_layer:
        map_subscribe_transient_local: True
      always_send_full_costmap: True

global_costmap:
  global_costmap:
    ros__parameters:
      update_frequency: 5.0
      publish_frequency: 2.0
      global_frame: map
      robot_base_frame: base_link
      use_sim_time: False
      robot_radius: 0.2
      resolution: 0.05
      track_unknown_space: true
      plugins: ["static_layer", "obstacle_layer", "inflation_layer"]
      obstacle_layer:
        plugin: "nav2_costmap_2d::ObstacleLayer"
        enabled: True
        observation_sources: scan
        scan:
          topic: /scan
          sensor_frame: livox_frame
          max_obstacle_height: 2.0
          clearing: True
          marking: True
          data_type: "LaserScan"
          raytrace_max_range: 20.0
          raytrace_min_range: 1.0
          obstacle_max_range: 20.0
          obstacle_min_range: 1.0
      static_layer:
        plugin: "nav2_costmap_2d::StaticLayer"
        map_subscribe_transient_local: True
      inflation_layer:
        plugin: "nav2_costmap_2d::InflationLayer"
        cost_scaling_factor: 2.0
        inflation_radius: 0.26  #0.55
      always_send_full_costmap: False

map_server:
  ros__parameters :
    # Overridden in launch by the "map" launch configuration or provided default value.
    # To use in yaml, remove the default "map" value in the tb3_simulation_launch.py file & provide full path to map below.
    yaml_filename: ""

map_saver:
  ros__parameters:
    use_sim_time: False
    save_map_timeout: 5.0
    free_thresh_default: 0.25
    occupied_thresh_default: 0.65
    map_subscribe_transient_local: True

planner_server:
  ros__parameters:
    expected_planner_frequency: 0.0
    use_sim_time: False
    planner_plugins: ["GridBased"]
    GridBased:
      plugin: "nav2_smac_planner/SmacPlannerHybrid"
      tolerance: 0.15                      # 如果无法到达精确位置的规划容差，单位：米
      use_astar: true                     # 是否使用A*算法
      allow_unknown: true                 # 允许在未知空间中行驶
      downsample_costmap: false           # 是否对地图进行下采样
      downsampling_factor: 1              # 代价地图层分辨率的倍数 (e.g. 2 on a 5cm costmap would be 10cm)
      max_iterations: 10000               # 搜索的最大总迭代次数（如果无法到达），设置为-1以禁用
      max_on_approach_iterations: 1000    # 一旦在容差范围内，尝试到达目标的最大迭代次数
      max_planning_time: 3.5              # 规划、平滑和上采样的最大时间（秒）。将根据规划后的剩余时间缩放最大平滑和上采样时间。
      cost_travel_multiplier: 2.0         # For 2D: 应用于搜索的代价乘数，以避开高代价区域。较大的值将更精确地放置在通道的中心（如果存在非“FREE”代价势场），但计算时间稍长。为了优化速度，1.0是合理的值。合理的折衷值是2.0。0.0的值有效地禁用避开障碍物的功能，像一个简单的二进制搜索A*。
      motion_model_for_search: "DUBIN"    # For Hybrid Dubin, Redds-Shepp
      angle_quantization_bins: 64         # For Hybrid nodes: 搜索的角度桶数，对于2D节点必须为1（无角度搜索）
      analytic_expansion_ratio: 3.5       # For Hybrid/Lattice nodes: 在搜索过程中尝试解析扩展的比例，用于最终接近。
      analytic_expansion_max_length: 3.0  # For Hybrid/Lattice nodes: 解析扩展被认为有效的最大长度，以防止不安全的捷径（单位：米）。这应该与最小转弯半径成比例，不应小于最小半径的4-5倍。
      minimum_turning_radius: 0.05        # For Hybrid/Lattice nodes: 路径/车辆的最小转弯半径，单位：米
      retrospective_penalty: 0.025        # For Hybrid/Lattice nodes: 优先考虑路径上较晚的机动而不是较早的机动。节省搜索时间，因为较早的节点不会被扩展，直到有必要。必须 >= 0.0且 <= 1.0
      reverse_penalty: 1.0                # For Reeds-Shepp model: 应用于倒车的惩罚，必须 >= 1
      change_penalty: 1.0                 # For Hybrid nodes: 应用于改变方向的惩罚，必须 >= 0
      non_straight_penalty: 1.20          # For Hybrid nodes: 应用于非直线运动的惩罚，必须 >= 1
      cost_penalty: 1.6                   # For Hybrid nodes: 在将更高代价区域添加到障碍物地图动态规划距离扩展启发式时应用的惩罚。这将驱动机器人更靠近通道的中心。1.3 - 3.5 之间的值是合理的。
      rotation_penalty: 5.0               # For Lattice node: 仅在使用包含原地旋转原语的最小控制集时应用于纯原地旋转命令的惩罚。除非严格必要用于避开障碍物，否则应始终设置足够高的权重，以避免此操作，否则可能会在路径中频繁出现不连续的情况，要求机器人原地旋转以节省路径距离。
      lookup_table_size: 20.0             # For Hybrid nodes: 缓存的dubin/reeds-sheep距离窗口的大小，单位：米。
      cache_obstacle_heuristic: True      # For Hybrid nodes: 在同一目标位置的后续重新规划之间缓存障碍物地图动态规划距离扩展启发式。如果代价地图基本静态，则显著加快重新规划性能（40倍）。
      allow_reverse_expansion: False      # For Lattice node: 是否在前向原语或反向扩展状态格子图中扩展，将使每一步的分支因子加倍。
      smooth_path: True                   # For Lattice/Hybrid nodes: 是否平滑路径，对于2D节点始终为 true。
      smoother:
        max_iterations: 1000
        w_smooth: 0.3
        w_data: 0.2
        tolerance: 1.0e-10
        do_refinement: true

smoother_server:
  ros__parameters:
    use_sim_time: False
    smoother_plugins: ["simple_smoother"]
    simple_smoother:
      plugin: "nav2_smoother::SimpleSmoother"
      tolerance: 1.0e-10
      max_its: 1000
      do_refinement: True

behavior_server:
  ros__parameters:
    costmap_topic: local_costmap/costmap_raw
    footprint_topic: local_costmap/published_footprint
    cycle_frequency: 10.0
    behavior_plugins: ["spin", "backup", "drive_on_heading", "assisted_teleop", "wait"]
    spin:
      plugin: "nav2_behaviors/Spin"
    backup:
      plugin: "nav2_behaviors/BackUp"
    drive_on_heading:
      plugin: "nav2_behaviors/DriveOnHeading"
    wait:
      plugin: "nav2_behaviors/Wait"
    assisted_teleop:
      plugin: "nav2_behaviors/AssistedTeleop"
    global_frame: odom
    robot_base_frame: base_link
    transform_tolerance: 0.1
    use_sim_time: False
    simulate_ahead_time: 2.0
    max_rotational_vel: 0.8
    min_rotational_vel: 0.3
    rotational_acc_lim: 3.2

robot_state_publisher:
  ros__parameters:
    use_sim_time: False

waypoint_follower:
  ros__parameters:
    use_sim_time: False
    loop_rate: 20
    stop_on_failure: false
    waypoint_task_executor_plugin: "wait_at_waypoint"
    wait_at_waypoint:
      plugin: "nav2_waypoint_follower::WaitAtWaypoint"
      enabled: True
      waypoint_pause_duration: 200

velocity_smoother:
  ros__parameters:
    use_sim_time: False
    smoothing_frequency: 20.0
    scale_velocities: False
    feedback: "OPEN_LOOP"
    max_velocity: [2.5, 2.5, 3.0]
    min_velocity: [-2.5, -2.5, -3.0]
    max_accel: [5.0, 5.0, 5.0]
    max_decel: [-5.0, -5.0, -5.0]
    odom_topic: "odometry"
    odom_duration: 0.1
    deadband_velocity: [0.0, 0.0, 0.0]
    velocity_timeout: 1.0
    # feedback: "OPEN_LOOP"
    # max_velocity: [2.0, 0.0, 1.0]
    # min_velocity: [-2.0, 0.0, -1.0]
    # max_accel: [2.0, 0.0, 1.0] 
    # max_decel: [-2.0, 0.0, -1.0]
    # odom_topic: "Odometry"
    # odom_duration: 0.1
    # deadband_velocity: [0.0, 0.0, 0.0]
    # velocity_timeout: 1.0
